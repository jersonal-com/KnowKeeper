# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
require 'dotenv'
Dotenv.load('.env')

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Internal Build to Google Play Store"
  lane :internal do
    build_flutter()
    upload_to_play_store(
        track: 'internal',
        release_status: "draft",
        aab: '../build/app/outputs/bundle/release/app-release.aab',
        skip_upload_apk: true,
        skip_upload_metadata: false,
        skip_upload_images: false,
        skip_upload_changelogs: false,
    )
  end

  desc "Submit a new alpha Version to Google Play Store"
  lane :alpha do
    build_flutter()
    upload_to_play_store(
        track: 'alpha',
        aab: '../build/app/outputs/bundle/release/app-release.aab',
        skip_upload_apk: true,
        skip_upload_metadata: false,
        skip_upload_images: false,
        skip_upload_changelogs: false,
    )
  end

  desc "Submit a new Beta Build to Google Play Store"
  lane :beta do
    increment_version()
    gradle(task: "clean bundleRelease")
    upload_to_play_store(track: 'beta')
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    flutter_generate_screenshots()
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end


  desc "Deploy a new version to the Google Play"
  lane :build_flutter do
    increment_version()
    sh("flutter build appbundle --release")
    gradle(task: "clean bundleRelease")
  end

  desc "Increment the version in pubspec.yaml"
  lane :increment_version do
    path = '../../pubspec.yaml'
    re = /version: (\d+\.\d+\.\d+)\+(\d+)/
    content = File.read(path)
    versionCode = content[re, 1]
    versionName = content[re, 2]
    newVersionCode = versionName.to_i + 1
    newVersionName = "#{versionCode}+#{newVersionCode}"
    content.gsub!(re, "version: #{versionCode}+#{newVersionCode}")
    File.write(path, content)
    puts "New version: #{newVersionName}"
  end

  desc "Generate Screenshots"
  lane :flutter_generate_screenshots do
    sh "flutter test --update-goldens test/screenshots/golden_screenshots.dart"
    sh "flutter pub get"
    sh "flutter test --update-goldens test/screenshots/golden_screenshots_decoration.dart"
    sh "flutter test --update-goldens test/screenshots/golden_screenshots_cleanup.dart"
  end

end
